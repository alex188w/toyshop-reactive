<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
                             https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.example</groupId>
        <artifactId>toyshop-multi</artifactId>
        <version>0.0.1-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>openapiContract</artifactId>
    <packaging>jar</packaging>
    <name>OpenAPI Contract Module</name>
    <description>Модуль с OpenAPI спецификацией для генерации кода</description>

    <properties>
        <java.version>21</java.version>
        <openapi.generator.version>7.12.0</openapi.generator.version>
    </properties>

    <dependencies>
        <!-- Jakarta Annotation для @Generated -->
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
            <version>2.1.1</version>
        </dependency>

        <!-- Валидация Jakarta -->
        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
            <version>3.1.0</version>
        </dependency>

        <!-- Swagger / OpenAPI аннотации -->
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>2.2.12</version>
        </dependency>

        <!-- Jackson для сериализации и nullable -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.15.2</version>
        </dependency>
        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>jackson-databind-nullable</artifactId>
            <version>0.2.4</version>
        </dependency>

        <!-- Spring WebFlux для реактивного клиента -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>

        <!-- Spring Boot Validation -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <!-- Servlet API для серверного генератора -->
        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <version>6.0.0</version>
            <scope>provided</scope>
        </dependency>

        <!-- SpringDoc OpenAPI для документации сервера -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webflux-api</artifactId>
            <version>2.2.0</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- OpenAPI Generator -->
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>${openapi.generator.version}</version>
                <executions>
                    <!-- Клиент на WebClient -->
                    <execution>
                        <id>generate-payment-service-client</id>
                        <goals><goal>generate</goal></goals>
                        <configuration>
                            <inputSpec>${project.basedir}/src/main/resources/openapi.yaml</inputSpec>
                            <generatorName>java</generatorName>
                            <library>webclient</library>
                            <apiPackage>com.example.openapi.client.api</apiPackage>
                            <modelPackage>com.example.openapi.client.model</modelPackage>
                            <output>${project.build.directory}/generated-sources/client</output>
                            <configOptions>
                                <useJakartaEe>true</useJakartaEe>
                                <nullableAnnotation>@jakarta.annotation.Nullable</nullableAnnotation>
                                <hideGenerationTimestamp>true</hideGenerationTimestamp>
                            </configOptions>
                        </configuration>
                    </execution>

                    <!-- Серверные заглушки Spring Boot -->
                    <execution>
                        <id>generate-payment-service-server</id>
                        <goals><goal>generate</goal></goals>
                        <configuration>
                            <inputSpec>${project.basedir}/src/main/resources/openapi.yaml</inputSpec>
                            <generatorName>spring</generatorName>
                            <library>spring-boot</library>
                            <interfaceOnly>true</interfaceOnly>
                            <apiPackage>com.example.openapi.server.api</apiPackage>
                            <modelPackage>com.example.openapi.server.model</modelPackage>
                            <output>${project.build.directory}/generated-sources/server</output>
                            <configOptions>
                                <useJakartaEe>true</useJakartaEe>
                                <nullableAnnotation>@jakarta.annotation.Nullable</nullableAnnotation>
                                <hideGenerationTimestamp>true</hideGenerationTimestamp>
                            </configOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Чтобы добавить сгенерированные исходники в classpath -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.5.0</version>
                <executions>
                    <execution>
                        <id>add-sources</id>
                        <phase>generate-sources</phase>
                        <goals><goal>add-source</goal></goals>
                        <configuration>
                            <sources>
                                <source>${project.build.directory}/generated-sources/client/src/main/java</source>
                                <source>${project.build.directory}/generated-sources/server/src/main/java</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>